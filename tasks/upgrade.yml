---
- name: Read dss-version.json file
  shell: cat {{ dss_service_user_home_basedir }}/{{ dss_service_user }}/{{ datadir }}/dss-version.json
  register: dss_version_jsonfile

- name: Set current dss version fact
  set_fact:
    current_dss_version: "{{ dss_version_jsonfile.stdout |  from_json | json_query('product_version') }}"

- name: Compare current DSS version with target DSS version and upgrade if needed
  block:
    - name: "Upgrade message" 
      debug:
        msg: "Upgrade needed"
    
    - name: Stop the studios
      become: true
      ansible.builtin.service:
        name: "dataiku.{{ datadir }}"
        state: stopped

    - name: Run the Dataiku DSS installer to upgrade the DSS instance
      become: true
      become_user: "{{ dss_service_user }}"
      ansible.builtin.command: "{{ dss_install_dir_location }}/dataiku-dss-{{ dss_version }}/installer.sh -u -d {{ dss_service_user_home_basedir }}/{{ dss_service_user }}/{{ datadir }}"
  
    - name: Restart the studios
      become: true
      ansible.builtin.service:
        name: "dataiku.{{ datadir }}"
        state: started
        enabled: true
  when: current_dss_version is version(dss_version,  operator='lt', strict=True)
  tags: [dss-upgrade]
